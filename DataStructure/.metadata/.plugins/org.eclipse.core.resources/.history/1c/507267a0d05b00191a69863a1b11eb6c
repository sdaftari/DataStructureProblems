//Given an array of non-negative integers, you are initially positioned at the first index of the array.
//Each element in the array represents your maximum jump length at that position.
//Determine if you are able to reach the last index.
//Example 1:
//Input: [2,3,1,1,4]
//Output: true
//Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.

// Time: O(n)

package Medium;

public class JumpGame {

	public static void main(String[] args) {
		int[] nums = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9};
		JumpGame obj = new JumpGame();
		System.out.println(obj.canJump(nums));
	}

	public boolean canJump(int[] nums) 
	{
        int reachable = 0;
        int count = 0;
        for (int i = 0; i < nums.length; i++)
        {
            if (i > reachable)
                return false;
            reachable = Math.max(reachable, i + nums[i]);
            count++;
        }
        System.out.println(count + reachable);
        return true;
    }
	
	public boolean numJump(int[] nums) 
	{
        int reachable = 0;
        int count = 0;
        while (reachable <= nums.length;)
        {
        	
        }
        for (int i = 0; i < nums.length; i++)
        {
            if (i > reachable)
                return false;
            reachable = Math.max(reachable, i + nums[i]);
            count++;
        }
        System.out.println(count + reachable);
        return true;
    }
}
