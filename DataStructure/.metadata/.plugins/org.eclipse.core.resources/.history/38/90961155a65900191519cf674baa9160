package Medium;
import java.util.*;

public class PrintCommonNodes {
	
	public void printCommon(TreeNode root1,TreeNode root2)
    {
        Stack<TreeNode> p = new Stack<>();
        Stack<TreeNode> q = new Stack<>();
        TreeNode pNode = root1;
        TreeNode qNode = root2;
        while(true)
        {
            if (pNode != null)
            {
                p.push(pNode);
                pNode = pNode.left;
            }
            else if (qNode != null)
            {
                q.push(qNode);
                qNode = qNode.left;
            }
            else if (!p.isEmpty() && !q.isEmpty())
            {
                pNode = p.pop();
                qNode = q.pop();
                
                if(pNode.val < qNode.val)
    			{
    				p.pop();
    				pNode = pNode.right;
    				qNode = null;
    			}
    			else if(qNode.val < pNode.val)
    			{
    				q.pop();
    				qNode = qNode.right;
    				pNode = null;
    			}
    			else
    			{
    				System.out.println(pNode.val + " ");
    				p.pop();
    				q.pop();
    				pNode = pNode.right;
    				qNode = qNode.right;
    			}
		    }
		    else
		        break;
        }
		
    }

	public static void main(String[] args) {
		PrintCommonNodes obj = new PrintCommonNodes();
		TreeNode root1 = new TreeNode(5);
		root1.left = new TreeNode(1);
		root1.right = new TreeNode(10);
		
		root1.left.left = new TreeNode(0);
		root1.left.right = new TreeNode(4);
		
		root1.right.left = new TreeNode(7);
		
		root1.right.left.right = new TreeNode(9);
	}

}
