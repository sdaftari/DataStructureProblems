Given a sorted array, two integers k and x, find the k closest elements to x in the array. The result should also be sorted in ascending order. If there is a tie, the smaller elements are always preferred.

Example 1:
Input: [1,2,3,4,5], k=4, x=3
Output: [1,2,3,4]
Example 2:
Input: [1,2,3,4,5], k=4, x=-1
Output: [1,2,3,4]

package Medium;
import java.util.*;
import java.util.stream.Collectors;

public class ClosestKElements {
	public List<Integer> findClosestElements(int[] A, int k, int x) 
	{
        int left = 0, right = A.length - k;
        while (left < right) 
        {
            int mid = (left + right) / 2;
            if (x - A[mid] > A[mid + k] - x)
                left = mid + 1;
            else
                right = mid;
        }
        return Arrays.stream(A, left, left + k).boxed().collect(Collectors.toList());
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
