Given an array you have to find  the max sum of i*A[i] where i is the index of the array obtained by rotating the element of the array one by one . Your task is to complete the function max_sum which takes one argument which is the array A [ ] and returns an integer value denoting  the required max sum .

package Medium;

public class MaxSumInConfiguration {
	
	// Returns maximum value of i*arr[i] 
	static int maxSum(int arr[], int n) 
	{ 
		// Initialize result 
		int res = Integer.MIN_VALUE; 
		  
		// Consider rotation beginning with i 
		// for all possible values of i. 
		for (int i = 0; i < n; i++) 
		{ 
		  
		    // Initialize sum of current rotation 
		    int curr_sum = 0; 
		  
		    // Compute sum of all values. We don't 
		    // acutally rotation the array, but compute 
		    // sum by finding ndexes when arr[i] is 
		    // first element 
		    for (int j = 0; j < n; j++) 
		    { 
		        int index = (i + j) % n; 
		        curr_sum += j * arr[index]; 
		    } 
		  
		    // Update result if required 
		    res = Math.max(res, curr_sum); 
		} 
		  
		return res; 
	} 

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
