package Medium;

public class SumOfLengthsOfMaxSubarray {
	
	// Returns max sum of lengths with maximum element 
    // as k 
    static int calculateMaxSumLength(int arr[], int n, int k) { 
        int ans = 0; // final sum of lengths 
  
        // number of elements in current subarray 
        int count = 0; 
  
        // variable for checking if k appeared in subarray 
        int flag = 0; 
  
        for (int i = 0; i < n;) { 
            count = 0; 
            flag = 0; 
  
            // count the number of elements which are 
            // less than equal to k 
            while (i < n && arr[i] <= k) { 
                count++; 
                if (arr[i] == k) 
                    flag = 1; 
                i++; 
            } 
  
            // if current element appeared in current 
            // subarray add count to sumLength 
            if (flag == 1) 
                ans += count; 
  
            // skip the array elements which are 
            // greater than k 
            while (i < n && arr[i] > k) 
                i++; 
        } 
        return ans; 
    } 

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
