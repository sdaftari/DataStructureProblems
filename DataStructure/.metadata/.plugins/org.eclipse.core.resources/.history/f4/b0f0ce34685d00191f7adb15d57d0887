//Example 1:
//Input: "babad"
//Output: "bab"
//Note: "aba" is also a valid answer.

package Medium;

public class LongestPalindromicSequence {
	private int lo, maxLen;
    public String longestPalindrome(String s)
    {
    	int len = s.length();
    	if (len < 2)
    		return s;
    	for (int i = 0; i < len-1; i++)
    	{
    		extendPalindrome(s, i, i);  //assume odd length, try to extend Palindrome as possible
            extendPalindrome(s, i, i+1); //assume even length.
    	}
    	
    	return s.substring(lo, lo + maxLen);
    }
    
    private void extendPalindrome(String s, int j, int k) 
    {
        while (j >= 0 && k < s.length() && s.charAt(j) == s.charAt(k)) 
        {
            j--;
            k++;
        }
        if (maxLen < k - j - 1) 
        {
            lo = j + 1;
            maxLen = k - j - 1;
        }
    }
    
    // To count palindromic substrings
    int count = 0;
    public int countSubstrings(String s) {
        if (s == null || s.length() == 0) 
            return 0;
        
        // i is the mid point
        for (int i = 0; i < s.length(); i++)
        {
            extendPalindrome1(s, i, i); // odd length;
            extendPalindrome1(s, i, i + 1); // even length
        }
        
        return count;
    }
    
    private void extendPalindrome1(String s, int left, int right)
    {
        while (left >=0 && right < s.length() && s.charAt(left) == s.charAt(right))
        {
            count++;
            left--;
            right++;
        }
    }

	public static void main(String[] args) {
		String abc = "bbabcbcab";

	}

}
