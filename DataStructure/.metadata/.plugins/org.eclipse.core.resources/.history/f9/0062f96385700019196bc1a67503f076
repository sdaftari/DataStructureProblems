//Given a fraction. Convert it into a decimal.
//Examples:
//
//Input: Numerator = 1, Denominator = 2
//Output: "0.5"
//1/2 = 0.5 with no repeating part.
//
//Input: Numerator = 50, Denominator = 22
//Output: "2.(27)"
//50/22 = 2.27272727... Since fractional part (27) 
//is repeating, it is enclosed in parentheses.

package Medium;
import java.util.*;

public class CalculateFraction 
{	
	// Function to return the required fraction 
	// in string format 
	String calculateFraction(int num, int den) 
	{ 
	    // If the numerator is zero, answer is 0 
	    if (num == 0) 
	        return "0"; 
	  
	    // If any one (out of numerator and denominator) 
	    // is -ve, sign of resultant answer -ve. 
	    int sign = (num < 0) ^ (den < 0) ? -1 : 1; 
	  
	    num = Math.abs(num); 
	    den = Math.abs(den); 
	  
	    // Calculate the absolute part (before decimal point). 
	    int initial = num / den; 
	  
	    // Output string to store the answer 
	    String res = ""; 
	  
	    // Append sign 
	    if (sign == -1) 
	        res += "-"; 
	  
	    // Append the initial part 
	    res += String.valueOf(initial); 
	  
	    // If completely divisible, return answer. 
	    if (num % den == 0) 
	        return res; 
	  
	    res += "."; 
	  
	    // Initialize Remainder 
	    int rem = num % den;  
	    Map<Integer, Integer> mp = new HashMap<>(); 
	  
	    // Position at which fraction starts repeating if it exists 
	    int index = -1; 
	    boolean repeating = false; 
	    while (rem > 0 && !repeating) 
	    { 	  
	        // If this remainder is already BullsAndCowsseen, 
	        // then there exists a repeating fraction. 
	        if (mp.containsKey(rem)) 
	        { 
	            // Index to insert parentheses 
	            index = mp.get(rem); 
	            repeating = true; 
	            break; 
	        } 
	        else
	        	// insert the index to insert a parenthesis
	            mp.put(rem, res.length()); 
	  
	        rem = rem * 10; 
	  
	        // Calculate quotient, append it to result and calculate next remainder 
	        int temp = rem / den; 
	        res += String.valueOf(temp); 
	        rem = rem % den; 
	    } 
	  
	    // If repeating fraction exists, insert parentheses. 
	    if (repeating) 
	    { 
	        res += ")"; 
	        res = res.substring(0, index) + "(" + res.substring(index);
	    } 
	  
	    // Return result. 
	    return res; 
	} 

	public static void main(String[] args) {
		CalculateFraction obj = new CalculateFraction();
		System.out.println(obj.calculateFraction(1, 2));
	}

}
